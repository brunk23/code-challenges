(defun run-lockers (&key (number 1000) (verbose nil))
  (let ((lockers (make-array number :initial-element 1)))
    (do ((i 2 (1+ i)))
	((> i number))
      (do ((j i (+ j i)))
	  ((> j number))
	(setf (aref lockers (1- j)) (if (= 1 (aref lockers (1- j))) 0 1))))
    (format t "There were a total of ~A lockers open.~%"
	    (do ((i 1 (1+ i))
		 (j 0 (1+ j)))
		((> i number) j)
	      (if (= 1 (aref lockers (1- i)))
		  (if verbose (format t "Locker ~A is open.~%" i))
		  (setf j (1- j)))))))
